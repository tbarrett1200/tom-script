extern func printf(&char, ...) -> i64
extern func putchar(char) -> i64

struct robot {
  name: &char
  direction: i64
  street: i64
  avenue: i64

}

func robot::create(name: &char) -> robot {
  var self: robot
  self.name = name
  self.direction = 0
  self.street = 0
  self.avenue = 0
  return self
}

func robot::turn_right(self: &robot) -> i64 {
  if self.direction == 3 then self.direction = 0
  else self.direction = self.direction + 1
  return 0
}

func robot::print(self: &robot) -> i64 {

  let format: [char, 56] = "{ name: '%s', direction: '%s', street: %d, avenue: %d }"
  let north: [char, 6] = "North"
  let south: [char, 6] = "South"
  let east: [char, 5] = "East"
  let west: [char, 5] = "West"

  var direction_string: &char

  if self.direction == 0 {
    direction_string = &north[0]
  } else if self.direction == 1 {
    direction_string = &east[0]
  } else if self.direction == 2 {
    direction_string = &south[0]
  } else if self.direction == 3 {
    direction_string = &west[0]
  }

  printf(&format[0], self.name, direction_string, self.street, self.avenue)
  putchar('\n')

  return 0
}

func robot::move(self: &robot) -> i64 {
  if (self.direction == 0) {
    self.avenue = self.avenue + 1
  } else if (self.direction == 1) {
    self.street = self.street + 1
  } else if (self.direction == 2) {
    self.avenue = self.avenue - 1
  } else if (self.direction == 3) {
    self.street = self.street - 1
  }
  return 0
}


func main() -> i64 {
  var name: [char, 6] = "Karel"
  var karel: robot = robot_create(&name[0])

  robot::print(&karel)

  return 0
}
