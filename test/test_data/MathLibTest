func abs (num: f64) -> f64 {
  if num > 0.0 {
    return num
  } else {
    return -num
  }
}

func factorial(num: f64) -> f64 {
  if num < 2.0 {
    return 1.0
  } else {
    return num * factorial(num-1.0)
  }
}

func pow(a: f64, b: f64) -> f64 {
  if b == 0.0 {
    return 1.0
  } else if b < 2.0 {
    return a
  } else {
    return a * pow(a, b-1.0)
  }
}

func sin(angle: f64) -> f64 {
  var result: f64 = 0.0
  var n: f64 = 1.0
  while n < 10.0 {
    let a: f64 = pow(-1.0, n - 1.0)
    let b: f64 = pow(angle, 2.0 * n - 1.0)
    let c: f64 = factorial(2.0 * n - 1.0)
    result = result + a * b / c
    n = n + 1.0
  }
  return result
}

func cos(angle: f64) -> f64 {
  var result: f64 = 0.0
  var n: i64 = 1
  while n < 10 {
    let a: f64 = pow(-1.0, Double(n))
    let b: f64 = pow(angle, 2.0 * Double(n))
    let c: f64 = factorial(2.0 * Double(n))
    result = result + a * b / c
    n = n + 1
  }
  return result
}

func tan(angle: f64) -> f64 {
  return sin(angle)/cos(angle)
}

func one_to_ten() -> [i64, 10] {
  return [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
}

extern func puts(&[char]) -> i64

func main() -> i64 {
  var greeting: [char, 13] = "Hello World!"
  puts(&greeting)
  return 0
}

func main() -> i64 {
  var array: [i64, 10] = one_to_ten()
  return array[0]
}
