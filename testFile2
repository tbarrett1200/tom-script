func factorial(num: Double) -> Double {
  if num < 2.0 {
    return 1.0
  } else {
    return num * factorial(num-1.0)
  }
}


func pow(a: Double, b: Double) -> Double {
 if b == 0.0 {
  return 1.0
 } else if b < 2.0 {
  return a
 } else {
  return a * pow(a, b-1.0)
 }
}

func sin(angle: Double) -> Double {
  var result: Double = 0.0
  var n: Double = 1.0
  while n < 10.0 {
    let a: Double = pow(1.0 - 2.0, n - 1.0)
    let b: Double = pow(angle, 2.0 * n - 1.0)
    let c: Double = factorial(2.0 * n - 1.0)
    result = result + a * b / c
    n = n + 1.0
  }
  return result
}

func cos(angle: Double) -> Double {
  var result: Double = 0.0
  var n: Double = 1.0
  while n < 10.0 {
    let a: Double = pow(1.0 - 2.0, n)
    let b: Double = pow(angle, 2.0 * n)
    let c: Double = factorial(2.0 * n)
    result = result + a * b / c
    n = n + 1.0
  }
  return result
}

  func tan (angle: Double) -> Double {
    return sin(angle)/cos(angle)
  }

func main() -> Double {
  return tan(3.14)
}
